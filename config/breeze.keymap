/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {

    behaviors {
		skq: sticky_key_quick_release {
			compatible = "zmk,behavior-sticky-key";
			label = "STICKY_KEY_QUICK_RELEASE";
			#binding-cells = <1>;
			bindings = <&kp>;
			release-after-ms = <2000>;
			quick-release;
		};
		
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        
        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {

// Ref: https://zmkfirmware.dev/docs/codes/

            // ---------------------------------------------------------------                      ----------------------------------------------------------------------------------
            // |   ESC    |   1  |     2    |     3    |     4     |     5    |                      |    6   |     7     |     8    |     9    |    0   |  BSPC  | |   -/_   |   =/+   |   HOME  |
            // |   TAB   |   Q  |     W    |     E    |     R     |     T    |                      |    Y   |     U     |     I    |     O    |    P   |    [   | |    ]    |   DEL   |   END   |
            // |  SHIFT  |   A  | S (LGUI) | D (LALT) | F (LCTRL) |     G    |                      |    H   | J (RCTRL) | K (RALT) | L (RGUI) |    ;   |    '   | |         |   UP    |         |
            // |   CTRL  |   Z  |     X    |     C    |     V     |     B    |                      |    N   |     M     |     ,    |     .    |    /   |    \   | |    L    |   DN    |    R    |
            //                             |    ALT   |    GUI    |    shift   |   SPACE |    | ENTER |  BSPC  |   RAISE   |   LOWER  |
            bindings = <
                &kp ESC &kp N1 &kp N2     &kp N3     &kp N4      &kp N5                            &kp N6   &kp N7      &kp N8     &kp N9     &kp N0   &kp BSPC   &kp MINUS &kp EQUAL &kp HOME
                &kp TAB   &kp Q  &kp W      &kp E      &kp R       &kp T                             &kp Y    &kp U       &kp I      &kp O      &kp P    &kp LBKT   &kp RBKT  &kp DEL   &kp END
                &kp LSHFT &kp A  &hm LGUI S &hm LALT D &hm LCTRL F &kp G                             &kp H    &hm RCTRL J &hm RALT K &hm RGUI L &kp SEMI &kp APOS             &kp UP
                &kp LCTRL &kp Z  &kp X      &kp C      &kp V       &kp B                             &kp N    &kp M       &kp COMMA  &kp DOT    &kp FSLH &kp BSLH   &kp LEFT  &kp DOWN  &kp RIGHT
                                            &kp LALT    &kp LGUI    &skq LSHFT &kp SPACE      &kp RET &kp BSPC &mo 2       &mo 1
            >;
        };

        lower_layer {
            // -------------------------------------------------------------------------------------------------------------------------------------------------------------------
            // |   F1   |    F2  |    F3  |    F4   |  F5  |  F6  |                     |   F7  |  F8  |  F9  |  F10  |  F11  |  F12  | |   PSCRN  |            |                |
            // |        |        |    ↑   |         |      |      |                     |       |      |      |       |       |       | |          |    Mute    |      Play      |
            // |  CAPS  |    ←   |    ↓   |    →    |      |      |                     |       |      |      |       |       |       | |          |    Vol+    |                |
            // |        |        |        |         |      |      |                     |       |      |      |       |       |       | |   Prev   |    Vol-    |      Next      |
            //                            |         |      |      |      |     |  BSPC  |  INS  |      |      |
            bindings = <
                &kp F1   &kp F2   &kp F3   &kp F4    &kp F5 &kp F6                       &kp F7  &kp F8 &kp F9 &kp F10 &kp F11 &kp F12   &kp PSCRN  &trans       &trans
                &trans   &trans   &kp UP   &trans    &trans &trans                       &trans  &trans &trans &trans  &trans  &trans    &trans     &kp C_MUTE   &kp C_PLAY_PAUSE
                &kp CAPS &kp LEFT &kp DOWN &kp RIGHT &trans &trans                       &trans  &trans &trans &trans  &trans  &trans               &kp C_VOL_UP
                &trans   &trans   &trans   &trans    &trans &trans                       &trans  &trans &trans &trans  &trans  &trans    &kp C_PREV &kp C_VOL_DN &kp C_NEXT
                                           &trans    &trans &trans &trans       &kp BSPC &kp INS &trans &trans
            >;
        };

        raise_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------------
            // |     BT1    |      |      |      |      |  BT_CLR  |                 |      |        |        |      |         |        | |   LA PSCRN  |      |      |
            // |     BT2    |      |      |      |      |          |                 |      |        |        |      |         |        | |             |      |      |
            // |     BT3    |      |      |      |      |          |                 |      |   <-   |    ↓   |   ↑  |    →    |        |               |      |
            // |     BT4    |      |      |      |      |          |                 |      |        |        |      |         |    \   | |             |      |      |
            //                            |      |      |          |      |  |  DEL  |      |   DEL  |        |      |         |
            bindings = <
                &bt BT_SEL 0 &trans &trans &trans &trans &bt BT_CLR                   &trans &trans   &trans   &trans &trans    &trans     &kp LA(PSCRN) &trans &trans
                &bt BT_SEL 1 &trans &trans &trans &trans &trans                       &trans &trans   &trans   &trans &trans    &trans     &trans        &trans &trans
                &bt BT_SEL 2 &trans &trans &trans &trans &trans                       &trans &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans                   &trans
                &bt BT_SEL 3 &trans &trans &trans &trans &trans                       &trans &trans   &trans   &trans &trans    &kp BSLH   &trans        &trans &trans
                                           &trans &trans &trans     &trans    &kp DEL &trans &trans   &trans
            >;
        };
    };
};
